{"ast":null,"code":"var _jsxFileName = \"/Users/appleone/Documents/GitHub/my-mernapp/client/src/components/form/Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'; // import { useDispatch, useSelector } from 'react-redux';\n\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles'; // import { createPost, updatePost } from '../../actions/posts';\n\nconst Form = _ref => {\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  //   const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n  //   const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n  //   const dispatch = useDispatch();\n  const classes = useStyles(); //   useEffect(() => {\n  //     if (post) setPostData(post);\n  //   }, [post]);\n  //   const clear = () => {\n  //     setCurrentId(0);\n  //     setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n  //   };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // if (currentId === 0) {\n    //   dispatch(createPost(postData));\n    //   clear();\n    // } else {\n    //   dispatch(updatePost(currentId, postData));\n    //   clear();\n    // }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, \"form component\");\n};\n\nexport default Form;","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useStyles","Form","currentId","setCurrentId","classes","handleSubmit","e","preventDefault","paper"],"sources":["/Users/appleone/Documents/GitHub/my-mernapp/client/src/components/form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\n// import { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport useStyles from './styles';\n// import { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({ currentId, setCurrentId }) => {\n//   const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n//   const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n//   const dispatch = useDispatch();\n  const classes = useStyles();\n\n//   useEffect(() => {\n//     if (post) setPostData(post);\n//   }, [post]);\n\n//   const clear = () => {\n//     setCurrentId(0);\n//     setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n//   };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // if (currentId === 0) {\n    //   dispatch(createPost(postData));\n    //   clear();\n    // } else {\n    //   dispatch(updatePost(currentId, postData));\n    //   clear();\n    // }\n  };\n\n  return (\n    <Paper className={classes.paper}>\n        form component\n      {/* <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\n        <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form> */}\n    </Paper>\n  );\n};\n\nexport default Form;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,UAA5B,EAAwCC,KAAxC,QAAqD,mBAArD,C,CACA;;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAOC,SAAP,MAAsB,UAAtB,C,CACA;;AAEA,MAAMC,IAAI,GAAG,QAAiC;EAAA,IAAhC;IAAEC,SAAF;IAAaC;EAAb,CAAgC;EAC9C;EACA;EACA;EACE,MAAMC,OAAO,GAAGJ,SAAS,EAAzB,CAJ4C,CAM9C;EACA;EACA;EAEA;EACA;EACA;EACA;;EAEE,MAAMK,YAAY,GAAG,MAAOC,CAAP,IAAa;IAChCA,CAAC,CAACC,cAAF,GADgC,CAGhC;IACA;IACA;IACA;IACA;IACA;IACA;EACD,CAVD;;EAYA,oBACE,oBAAC,KAAD;IAAO,SAAS,EAAEH,OAAO,CAACI,KAA1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,oBADF;AAeD,CA1CD;;AA4CA,eAAeP,IAAf"},"metadata":{},"sourceType":"module"}